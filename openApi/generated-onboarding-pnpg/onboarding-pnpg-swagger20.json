{
  "swagger": "2.0",
  "info": {
    "description": "Self Care OnBoarding API documentation",
    "title": "selc-onboarding",
    "version": "0.0.1-SNAPSHOT"
  },
  "host": "localhost:80",
  "basePath": "%7BbasePath%7D",
  "schemes": [
    "http"
  ],
  "paths": {
    "/institutions": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/InstitutionResource"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "institutions"
        ],
        "description": "The service retrieves all the onboarded institutions related to the logged user",
        "operationId": "getInstitutionsUsingGET",
        "summary": "getInstitutions"
      }
    },
    "/institutions/{externalInstitutionId}/geographicTaxonomy": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "Institution's unique external identifier",
            "in": "path",
            "name": "externalInstitutionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/GeographicTaxonomyResource"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "institutions"
        ],
        "description": "The service retrieve the institution's geographic taxonomy",
        "operationId": "getInstitutionGeographicTaxonomyUsingGET",
        "summary": "getInstitutionGeographicTaxonomy"
      }
    },
    "/institutions/{externalInstitutionId}/products/{productId}": {
      "head": {
        "produces": [
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "Institution's unique external identifier",
            "in": "path",
            "name": "externalInstitutionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Product's unique identifier",
            "in": "path",
            "name": "productId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "institutions"
        ],
        "description": "Checks if the specified institution has been onboarded on the specified product.",
        "operationId": "verifyOnboardingUsingHEAD",
        "summary": "verifyOnboarding"
      }
    },
    "/institutions/{externalInstitutionId}/products/{productId}/onboarded-institution-info": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "Institution's unique external identifier",
            "in": "path",
            "name": "externalInstitutionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Product's unique identifier",
            "in": "path",
            "name": "productId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InstitutionOnboardingInfoResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "institutions"
        ],
        "description": "The service retrieves the institutions Manager and institution informations",
        "operationId": "getInstitutionOnboardingInfoUsingGET",
        "summary": "getInstitutionOnboardingInfo"
      }
    },
    "/institutions/{externalInstitutionId}/products/{productId}/onboarding": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "Institution's unique external identifier",
            "in": "path",
            "name": "externalInstitutionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Product's unique identifier",
            "in": "path",
            "name": "productId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OnboardingDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "institutions"
        ],
        "description": "The service allows the onboarding of Users to an Institution",
        "operationId": "onboardingUsingPOST",
        "summary": "onboarding"
      }
    },
    "/pnPGInstitutions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InstitutionPnPGResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "pnPGInstitutions"
        ],
        "description": "Get Legal Representative's PN PG institution List",
        "operationId": "getInstitutionsByUserUsingPOST",
        "summary": "getInstitutionsByUser"
      }
    },
    "/pnPGInstitutions/{externalInstitutionId}/products/{productId}/onboarding": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "PG Institution's unique external identifier",
            "in": "path",
            "name": "externalInstitutionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Product's unique identifier",
            "in": "path",
            "name": "productId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PnPGOnboardingDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "pnPGInstitutions"
        ],
        "description": "The service allows the onboarding of Users to a PN PG Institution",
        "operationId": "onboardingPGUsingPOST",
        "summary": "onboardingPG"
      }
    },
    "/product/{id}": {
      "get": {
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "description": "Product's unique identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Institution's type",
            "enum": [
              "GSP",
              "PA",
              "PG",
              "PSP",
              "PT",
              "SCP"
            ],
            "in": "query",
            "name": "institutionType",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "product"
        ],
        "description": "The service retrieves the product given its internal id",
        "operationId": "getProductUsingGET",
        "summary": "getProduct"
      }
    },
    "/users/validate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/problem+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UserDataValidationDto"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ],
        "tags": [
          "user"
        ],
        "description": "Check if requested user data are valid",
        "operationId": "validateUsingPOST",
        "summary": "validate"
      }
    }
  },
  "definitions": {
    "AssistanceContactsDto": {
      "properties": {
        "supportEmail": {
          "description": "Institution's support email contact",
          "example": "email@example.com",
          "format": "email",
          "type": "string"
        },
        "supportPhone": {
          "description": "Institution's support phone contact",
          "type": "string"
        }
      },
      "title": "AssistanceContactsDto",
      "type": "object"
    },
    "BillingDataDto": {
      "properties": {
        "businessName": {
          "description": "Institution's legal name",
          "type": "string"
        },
        "digitalAddress": {
          "description": "Institution's digitalAddress",
          "type": "string"
        },
        "publicServices": {
          "description": "Institution's service type",
          "example": false,
          "type": "boolean"
        },
        "recipientCode": {
          "description": "Billing recipient code",
          "type": "string"
        },
        "registeredOffice": {
          "description": "Institution's physical address",
          "type": "string"
        },
        "taxCode": {
          "description": "Institution's taxCode",
          "type": "string"
        },
        "vatNumber": {
          "description": "Institution's VAT number",
          "type": "string"
        },
        "zipCode": {
          "description": "Institution's zipCode",
          "type": "string"
        }
      },
      "required": [
        "businessName",
        "digitalAddress",
        "recipientCode",
        "registeredOffice",
        "taxCode",
        "vatNumber",
        "zipCode"
      ],
      "title": "BillingDataDto",
      "type": "object"
    },
    "BusinessPnPGResource": {
      "properties": {
        "businessName": {
          "description": "Legal Representative's institutions name",
          "type": "string"
        },
        "businessTaxId": {
          "description": "Legal Representative's institutions tax ID",
          "type": "string"
        }
      },
      "required": [
        "businessName",
        "businessTaxId"
      ],
      "title": "BusinessPnPGResource",
      "type": "object"
    },
    "CompanyInformationsDto": {
      "properties": {
        "businessRegisterPlace": {
          "description": "Institution's business register place",
          "type": "string"
        },
        "rea": {
          "description": "Institution's REA",
          "type": "string"
        },
        "shareCapital": {
          "description": "Institution's share capital value",
          "type": "string"
        }
      },
      "title": "CompanyInformationsDto",
      "type": "object"
    },
    "DpoDataDto": {
      "properties": {
        "address": {
          "description": "DPO's address",
          "type": "string"
        },
        "email": {
          "description": "DPO's email",
          "example": "email@example.com",
          "format": "email",
          "type": "string"
        },
        "pec": {
          "description": "DPO's PEC",
          "example": "email@example.com",
          "format": "email",
          "type": "string"
        }
      },
      "required": [
        "address",
        "email",
        "pec"
      ],
      "title": "DpoDataDto",
      "type": "object"
    },
    "GeographicTaxonomyDto": {
      "properties": {
        "code": {
          "description": "Institution's geographic taxonomy ISTAT code",
          "type": "string"
        },
        "desc": {
          "description": "Institution's geographic taxonomy extended name",
          "type": "string"
        }
      },
      "required": [
        "code",
        "desc"
      ],
      "title": "GeographicTaxonomyDto",
      "type": "object"
    },
    "GeographicTaxonomyResource": {
      "properties": {
        "code": {
          "description": "Institution's geographic taxonomy ISTAT code",
          "type": "string"
        },
        "desc": {
          "description": "Institution's geographic taxonomy extended name",
          "type": "string"
        }
      },
      "required": [
        "code",
        "desc"
      ],
      "title": "GeographicTaxonomyResource",
      "type": "object"
    },
    "InstitutionData": {
      "properties": {
        "billingData": {
          "$ref": "#/definitions/BillingDataDto",
          "description": "Institution's billing information"
        },
        "institutionType": {
          "description": "Institution's type",
          "enum": [
            "GSP",
            "PA",
            "PG",
            "PSP",
            "PT",
            "SCP"
          ],
          "type": "string"
        },
        "origin": {
          "type": "string"
        }
      },
      "title": "InstitutionData",
      "type": "object"
    },
    "InstitutionOnboardingInfoResource": {
      "properties": {
        "geographicTaxonomies": {
          "description": "Institution's geographic taxonomy",
          "items": {
            "$ref": "#/definitions/GeographicTaxonomyResource"
          },
          "type": "array"
        },
        "institution": {
          "$ref": "#/definitions/InstitutionData",
          "description": "Institution's billing and type information"
        },
        "manager": {
          "$ref": "#/definitions/UserResource",
          "description": "Institution Manager's informations"
        }
      },
      "required": [
        "geographicTaxonomies"
      ],
      "title": "InstitutionOnboardingInfoResource",
      "type": "object"
    },
    "InstitutionPnPGResource": {
      "properties": {
        "businesses": {
          "description": "Legal Representative's institutions list",
          "items": {
            "$ref": "#/definitions/BusinessPnPGResource"
          },
          "type": "array"
        },
        "legalTaxId": {
          "description": "Legal Representative's tax ID",
          "type": "string"
        },
        "requestDateTime": {
          "description": "Timestamp request institutions PNPG list",
          "type": "string"
        }
      },
      "required": [
        "businesses",
        "legalTaxId",
        "requestDateTime"
      ],
      "title": "InstitutionPnPGResource",
      "type": "object"
    },
    "InstitutionResource": {
      "properties": {
        "address": {
          "description": "Institution's physical address",
          "type": "string"
        },
        "description": {
          "description": "Institution's legal name",
          "type": "string"
        },
        "digitalAddress": {
          "description": "Institution's digitalAddress",
          "type": "string"
        },
        "externalId": {
          "description": "Institution's unique external identifier",
          "type": "string"
        },
        "id": {
          "description": "Institution's unique internal Id",
          "format": "uuid",
          "type": "string"
        },
        "institutionType": {
          "description": "Institution's type",
          "enum": [
            "GSP",
            "PA",
            "PG",
            "PSP",
            "PT",
            "SCP"
          ],
          "type": "string"
        },
        "origin": {
          "description": "Institution data origin",
          "type": "string"
        },
        "originId": {
          "description": "Institution's details origin Id",
          "type": "string"
        },
        "taxCode": {
          "description": "Institution's taxCode",
          "type": "string"
        },
        "userRole": {
          "description": "Logged user's role",
          "enum": [
            "ADMIN",
            "LIMITED"
          ],
          "type": "string"
        },
        "zipCode": {
          "description": "Institution's zipCode",
          "type": "string"
        }
      },
      "required": [
        "address",
        "description",
        "digitalAddress",
        "externalId",
        "id",
        "institutionType",
        "origin",
        "originId",
        "taxCode",
        "userRole",
        "zipCode"
      ],
      "title": "InstitutionResource",
      "type": "object"
    },
    "InvalidParam": {
      "properties": {
        "name": {
          "description": "Invalid parameter name.",
          "type": "string"
        },
        "reason": {
          "description": "Invalid parameter reason.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "reason"
      ],
      "title": "InvalidParam",
      "type": "object"
    },
    "OnboardingDto": {
      "properties": {
        "assistanceContacts": {
          "$ref": "#/definitions/AssistanceContactsDto",
          "description": "Institution's assistance contacts"
        },
        "billingData": {
          "$ref": "#/definitions/BillingDataDto",
          "description": "Institution's billing information"
        },
        "companyInformations": {
          "$ref": "#/definitions/CompanyInformationsDto",
          "description": "GPS, SCP, PT optional data"
        },
        "geographicTaxonomies": {
          "description": "List of geographic Taxonomies",
          "items": {
            "$ref": "#/definitions/GeographicTaxonomyDto"
          },
          "type": "array"
        },
        "institutionType": {
          "description": "Institution's type",
          "enum": [
            "GSP",
            "PA",
            "PG",
            "PSP",
            "PT",
            "SCP"
          ],
          "type": "string"
        },
        "origin": {
          "description": "Institution data origin",
          "type": "string"
        },
        "pricingPlan": {
          "description": "Product's pricing plan",
          "type": "string"
        },
        "pspData": {
          "$ref": "#/definitions/PspDataDto",
          "description": "Payment Service Provider (PSP) specific data"
        },
        "users": {
          "description": "List of onboarding users",
          "items": {
            "$ref": "#/definitions/UserDto"
          },
          "type": "array"
        }
      },
      "required": [
        "billingData",
        "geographicTaxonomies",
        "institutionType",
        "users"
      ],
      "title": "OnboardingDto",
      "type": "object"
    },
    "PnPGBillingDataDto": {
      "properties": {
        "businessName": {
          "description": "Institution's legal name",
          "type": "string"
        },
        "taxCode": {
          "description": "Institution's taxCode",
          "type": "string"
        }
      },
      "required": [
        "businessName",
        "taxCode"
      ],
      "title": "PnPGBillingDataDto",
      "type": "object"
    },
    "PnPGOnboardingDto": {
      "properties": {
        "billingData": {
          "$ref": "#/definitions/PnPGBillingDataDto",
          "description": "Institution's billing information"
        },
        "users": {
          "description": "List of onboarding users",
          "items": {
            "$ref": "#/definitions/UserDto"
          },
          "type": "array"
        }
      },
      "required": [
        "billingData",
        "users"
      ],
      "title": "PnPGOnboardingDto",
      "type": "object"
    },
    "Problem": {
      "description": "A \"problem detail\" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)",
      "properties": {
        "detail": {
          "description": "Human-readable description of this specific problem.",
          "type": "string"
        },
        "instance": {
          "description": "A URI that describes where the problem occurred.",
          "type": "string"
        },
        "invalidParams": {
          "description": "A list of invalid parameters details.",
          "items": {
            "$ref": "#/definitions/InvalidParam"
          },
          "type": "array"
        },
        "status": {
          "description": "The HTTP status code.",
          "example": 500,
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "description": "Short human-readable summary of the problem.",
          "type": "string"
        },
        "type": {
          "description": "A URL to a page with more details regarding the problem.",
          "type": "string"
        }
      },
      "required": [
        "status",
        "title"
      ],
      "title": "Problem",
      "type": "object"
    },
    "ProductResource": {
      "properties": {
        "id": {
          "description": "Product's unique identifier",
          "type": "string"
        },
        "parentId": {
          "description": "Product's parent's Id",
          "type": "string"
        },
        "status": {
          "description": "Product's status",
          "enum": [
            "ACTIVE",
            "INACTIVE",
            "PHASE_OUT",
            "TESTING"
          ],
          "type": "string"
        },
        "title": {
          "description": "Product's title",
          "type": "string"
        }
      },
      "required": [
        "id",
        "status",
        "title"
      ],
      "title": "ProductResource",
      "type": "object"
    },
    "PspDataDto": {
      "properties": {
        "abiCode": {
          "description": "PSP's ABI code",
          "type": "string"
        },
        "businessRegisterNumber": {
          "description": "PSP's Business Register number",
          "type": "string"
        },
        "dpoData": {
          "$ref": "#/definitions/DpoDataDto",
          "description": "Data Protection Officer (DPO) specific data"
        },
        "legalRegisterName": {
          "description": "PSP's legal register name",
          "type": "string"
        },
        "legalRegisterNumber": {
          "description": "PSP's legal register number",
          "type": "string"
        },
        "vatNumberGroup": {
          "description": "PSP's Vat Number group",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "abiCode",
        "businessRegisterNumber",
        "dpoData",
        "legalRegisterName",
        "legalRegisterNumber",
        "vatNumberGroup"
      ],
      "title": "PspDataDto",
      "type": "object"
    },
    "UserDataValidationDto": {
      "properties": {
        "name": {
          "description": "User's name",
          "type": "string"
        },
        "surname": {
          "description": "User's surname",
          "type": "string"
        },
        "taxCode": {
          "description": "User's fiscal code",
          "type": "string"
        }
      },
      "required": [
        "taxCode"
      ],
      "title": "UserDataValidationDto",
      "type": "object"
    },
    "UserDto": {
      "properties": {
        "email": {
          "description": "User's email",
          "example": "email@example.com",
          "format": "email",
          "type": "string"
        },
        "name": {
          "description": "User's name",
          "type": "string"
        },
        "role": {
          "description": "User's role",
          "enum": [
            "DELEGATE",
            "MANAGER",
            "OPERATOR",
            "SUB_DELEGATE"
          ],
          "type": "string"
        },
        "surname": {
          "description": "User's surname",
          "type": "string"
        },
        "taxCode": {
          "description": "User's fiscal code",
          "type": "string"
        }
      },
      "required": [
        "email",
        "name",
        "role",
        "surname",
        "taxCode"
      ],
      "title": "UserDto",
      "type": "object"
    },
    "UserResource": {
      "properties": {
        "email": {
          "description": "User's institutional email",
          "example": "email@example.com",
          "format": "email",
          "type": "string"
        },
        "id": {
          "description": "User's unique identifier",
          "format": "uuid",
          "type": "string"
        },
        "institutionId": {
          "description": "Institution's unique internal Id",
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "description": "User's name",
          "type": "string"
        },
        "role": {
          "description": "User's role",
          "enum": [
            "DELEGATE",
            "MANAGER",
            "OPERATOR",
            "SUB_DELEGATE"
          ],
          "type": "string"
        },
        "status": {
          "description": "User's status",
          "type": "string"
        },
        "surname": {
          "description": "User's surname",
          "type": "string"
        },
        "taxCode": {
          "description": "User's fiscal code",
          "type": "string"
        }
      },
      "required": [
        "id",
        "institutionId",
        "role",
        "status",
        "taxCode"
      ],
      "title": "UserResource",
      "type": "object"
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "description": "A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "tags": [
    {
      "description": "Institution operations",
      "name": "institutions"
    },
    {
      "description": "PN PG Institution operations",
      "name": "pnPGInstitutions"
    },
    {
      "description": "Product operations",
      "name": "product"
    },
    {
      "description": "User Controller",
      "name": "user"
    }
  ],
  "x-components": {}
}
