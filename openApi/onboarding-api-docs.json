{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "selc-onboarding",
    "description" : "Self Care OnBoarding API documentation",
    "version" : "0.0.1-SNAPSHOT"
  },
  "servers" : [ {
    "url" : "{url}:{port}{basePath}",
    "variables" : {
      "url" : {
        "default" : "http://localhost"
      },
      "port" : {
        "default" : "80"
      },
      "basePath" : {
        "default" : ""
      }
    }
  } ],
  "tags" : [ {
    "name" : "institutions",
    "description" : "Institution operations"
  }, {
    "name" : "product",
    "description" : "Product operations"
  }, {
    "name" : "tokens",
    "description" : "Token V 2 Controller"
  }, {
    "name" : "user",
    "description" : "User Controller"
  } ],
  "paths" : {
    "/v1/institutions" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getInstitutions",
        "description" : "The service retrieves all the onboarded institutions related to the logged user",
        "operationId" : "getInstitutionsUsingGET",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productFilter",
          "in" : "query",
          "description" : "A product to filter the institutions based on whether the institution has an ACTIVE onboarding on the specified product.",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InstitutionResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/company/onboarding" : {
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "onboarding",
        "description" : "The service allows the onboarding of Users to a subunit of an Institution",
        "operationId" : "onboardingUsingPOST",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompanyOnboardingDto"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/from-infocamere/" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getInstitutionsFromInfocamere",
        "description" : "Get Legal Representative's PN PG institution List",
        "operationId" : "getInstitutionsFromInfocamereUsingGET",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InstitutionResourceIC"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/geographicTaxonomies" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getGeographicTaxonomiesByTaxCodeAndSubunitCode",
        "description" : "The service retrieve the institution's geographic taxonomy",
        "operationId" : "getGeographicTaxonomiesByTaxCodeAndSubunitCodeUsingGET",
        "parameters" : [ {
          "name" : "taxCode",
          "in" : "query",
          "description" : "Institution's taxCode",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subunitCode",
          "in" : "query",
          "description" : "Institution's subunitCode",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GeographicTaxonomyResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/onboarding" : {
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "onboarding",
        "description" : "The service allows the onboarding of Users to a subunit of an Institution",
        "operationId" : "onboardingUsingPOST_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OnboardingProductDto"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      },
      "head" : {
        "tags" : [ "institutions" ],
        "summary" : "verifyOnboarding",
        "description" : "Checks if the specified institution has been onboarded on the specified product.",
        "operationId" : "verifyOnboardingUsingHEAD",
        "parameters" : [ {
          "name" : "taxCode",
          "in" : "query",
          "description" : "Institution's taxCode",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subunitCode",
          "in" : "query",
          "description" : "Institution's subunitCode",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "origin",
          "in" : "query",
          "description" : "Institution data origin",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "originId",
          "in" : "query",
          "description" : "Institution's details origin Id",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vatNumber",
          "in" : "query",
          "description" : "Institution's VAT number",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "verifyType",
          "in" : "query",
          "description" : "Onboarding verification method type",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string",
            "enum" : [ "EXTERNAL", "INTERNAL" ]
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/onboarding/" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getInstitutionOnboardingInfoById",
        "description" : "The service retrieves the institutions Manager and institution informations",
        "operationId" : "getInstitutionOnboardingInfoUsingGET",
        "parameters" : [ {
          "name" : "institutionId",
          "in" : "query",
          "description" : "Institution's unique internal Id",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InstitutionOnboardingInfoResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/verification/legal-address" : {
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "postVerificationLegalAddress",
        "description" : "Get legal address by business tax id",
        "operationId" : "postVerificationLegalAddressUsingPOST",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VerificationLegalAddressRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InstitutionLegalAddressResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/verification/match" : {
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "postVerificationMatch",
        "description" : "MatchLegal Representative and inserted Institution by querying on Agenzia delle Entrate",
        "operationId" : "postVerificationMatchUsingPOST",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VerificationMatchRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MatchInfoResultResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/{externalInstitutionId}/geographicTaxonomy" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getInstitutionGeographicTaxonomy",
        "description" : "The service retrieve the institution's geographic taxonomy",
        "operationId" : "getInstitutionGeographicTaxonomyUsingGET",
        "parameters" : [ {
          "name" : "externalInstitutionId",
          "in" : "path",
          "description" : "Institution's unique external identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GeographicTaxonomyResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/{externalInstitutionId}/products/{productId}" : {
      "head" : {
        "tags" : [ "institutions" ],
        "summary" : "verifyOnboarding",
        "description" : "Checks if the specified institution has been onboarded on the specified product.",
        "operationId" : "verifyOnboardingUsingHEAD_1",
        "parameters" : [ {
          "name" : "externalInstitutionId",
          "in" : "path",
          "description" : "Institution's unique external identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/institutions/{externalInstitutionId}/products/{productId}/onboarded-institution-info" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getInstitutionOnboardingInfo",
        "description" : "The service retrieves the institutions Manager and institution informations",
        "operationId" : "getInstitutionOnboardingInfoUsingGET_1",
        "parameters" : [ {
          "name" : "externalInstitutionId",
          "in" : "path",
          "description" : "Institution's unique external identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InstitutionOnboardingInfoResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/institutions" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getInstitution",
        "description" : "The service allows the onboarding of Users to a subunit of an Institution",
        "operationId" : "v2GetInstitutionByFilters",
        "parameters" : [ {
          "name" : "productId",
          "in" : "query",
          "description" : "A product to filter the institutions based on whether the institution has an ACTIVE onboarding on the specified product.",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taxCode",
          "in" : "query",
          "description" : "Institution's taxCode",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "origin",
          "in" : "query",
          "description" : "Institution data origin",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "originId",
          "in" : "query",
          "description" : "Institution's details origin Id",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subunitCode",
          "in" : "query",
          "description" : "Institution's subunitCode",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InstitutionResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/institutions/company/onboarding" : {
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "onboarding",
        "description" : "The service allows the onboarding of Users to a subunit of an Institution",
        "operationId" : "onboardingUsingPOST_2",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompanyOnboardingDto"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/institutions/onboarding" : {
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "onboarding",
        "description" : "The service allows the onboarding of Users to a subunit of an Institution",
        "operationId" : "onboardingUsingPOST_3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OnboardingProductDto"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/institutions/onboarding/active" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "getActiveOnboarding",
        "description" : "The service retrieves the active onboarding information for a given tax code and product ID",
        "operationId" : "getActiveOnboardingUsingGET",
        "parameters" : [ {
          "name" : "taxCode",
          "in" : "query",
          "description" : "taxCode",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "productId",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subunitCode",
          "in" : "query",
          "description" : "subunitCode",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InstitutionOnboardingResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/institutions/onboarding/recipientCode/verification" : {
      "get" : {
        "tags" : [ "billing-portal", "institutions" ],
        "summary" : "checkRecipientCode",
        "description" : "The service allows to verify if recipientCode is valid or not",
        "operationId" : "checkRecipientCodeUsingGET",
        "parameters" : [ {
          "name" : "originId",
          "in" : "query",
          "description" : "originId",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recipientCode",
          "in" : "query",
          "description" : "recipientCode",
          "required" : true,
          "style" : "form",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "enum" : [ "ACCEPTED", "DENIED_NO_ASSOCIATION", "DENIED_NO_BILLING" ]
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/institutions/onboarding/users/pg" : {
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "onboardingUsers",
        "description" : "The service allows the onboarding of Users to a PG Institution",
        "operationId" : "onboardingUsersUsingPOST",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompanyOnboardingUserDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/product/{id}" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "getProduct",
        "description" : "The service retrieves the product given its internal id",
        "operationId" : "getProductUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "institutionType",
          "in" : "query",
          "description" : "Institution's type",
          "required" : false,
          "style" : "form",
          "schema" : {
            "type" : "string",
            "enum" : [ "AS", "CON", "GSP", "PA", "PG", "PRV", "PSP", "PT", "REC", "SA", "SCP" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/products" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "getProducts",
        "description" : "The service retrieves all products",
        "operationId" : "getProducts",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/products/admin" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "getProductsAdmin",
        "description" : "The service retrieves all products for the addition administration functionality",
        "operationId" : "getProductsAdmin",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductResource"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/tokens/{onboardingId}" : {
      "get" : {
        "tags" : [ "tokens" ],
        "summary" : "retrieveOnboardingRequest",
        "description" : "Service to retrieve a specific onboarding request",
        "operationId" : "retrieveOnboardingRequestUsingGET",
        "parameters" : [ {
          "name" : "onboardingId",
          "in" : "path",
          "description" : "Onboarding's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OnboardingRequestResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/tokens/{onboardingId}/approve" : {
      "post" : {
        "tags" : [ "tokens" ],
        "summary" : "Service to approve a specific onboarding request",
        "description" : "Service to approve a specific onboarding request",
        "operationId" : "approveOnboardingUsingPOST",
        "parameters" : [ {
          "name" : "onboardingId",
          "in" : "path",
          "description" : "Onboarding's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/tokens/{onboardingId}/complete" : {
      "post" : {
        "tags" : [ "tokens" ],
        "summary" : "Complete an onboarding request",
        "description" : "Complete an onboarding request",
        "operationId" : "completeUsingPOST",
        "parameters" : [ {
          "name" : "onboardingId",
          "in" : "path",
          "description" : "Onboarding's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "contract" ],
                "type" : "object",
                "properties" : {
                  "contract" : {
                    "type" : "string",
                    "description" : "contract",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      },
      "delete" : {
        "tags" : [ "tokens" ],
        "summary" : "Complete an onboarding request",
        "description" : "Complete an onboarding request",
        "operationId" : "deleteUsingDELETE",
        "parameters" : [ {
          "name" : "onboardingId",
          "in" : "path",
          "description" : "Contract's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/tokens/{onboardingId}/completeOnboardingUsers" : {
      "post" : {
        "tags" : [ "tokens" ],
        "summary" : "Complete an onboarding users request",
        "description" : "Complete an onboarding users request",
        "operationId" : "completeOnboardingUsersUsingPOST",
        "parameters" : [ {
          "name" : "onboardingId",
          "in" : "path",
          "description" : "Onboarding's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "contract" ],
                "type" : "object",
                "properties" : {
                  "contract" : {
                    "type" : "string",
                    "description" : "contract",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/tokens/{onboardingId}/contract" : {
      "get" : {
        "tags" : [ "tokens" ],
        "summary" : "getContract",
        "description" : "Service to download a specific onboarding contract",
        "operationId" : "getContractUsingGET",
        "parameters" : [ {
          "name" : "onboardingId",
          "in" : "path",
          "description" : "Onboarding's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "byte"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/tokens/{onboardingId}/products/{productId}/aggregates-csv" : {
      "get" : {
        "tags" : [ "tokens" ],
        "summary" : "getAggregatesCsv",
        "description" : "Service to download a specific onboarding aggregates csv",
        "operationId" : "getAggregatesCsvUsingGET",
        "parameters" : [ {
          "name" : "onboardingId",
          "in" : "path",
          "description" : "Onboarding's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "byte"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/tokens/{onboardingId}/reject" : {
      "post" : {
        "tags" : [ "tokens" ],
        "summary" : "Service to reject a specific onboarding request",
        "operationId" : "rejectOnboardingUsingPOST",
        "parameters" : [ {
          "name" : "onboardingId",
          "in" : "path",
          "description" : "Onboarding's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReasonForRejectDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v2/tokens/{onboardingId}/verify" : {
      "post" : {
        "tags" : [ "tokens" ],
        "summary" : "Verify if the token is already consumed",
        "description" : "Verify if the token is already consumed",
        "operationId" : "verifyOnboardingUsingPOST",
        "parameters" : [ {
          "name" : "onboardingId",
          "in" : "path",
          "description" : "Onboarding's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OnboardingVerify"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/users/check-manager" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "checkManager",
        "description" : "Returns true if current manager and previous one are the same",
        "operationId" : "checkManager",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OnboardingUserDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagerResultResource"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/users/onboarding" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "onboarding",
        "description" : "The service allows the onboarding of Users",
        "operationId" : "onboardingUsingPOST_4",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OnboardingUserDto"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/users/onboarding/aggregator" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "onboardingAggregator",
        "description" : "The service allows the onboarding of Users for aggregators",
        "operationId" : "onboardingAggregatorUsingPOST",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OnboardingUserDto"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/v1/users/validate" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "validate",
        "description" : "Check if requested user data are valid",
        "operationId" : "validateUsingPOST",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserDataValidationDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "AdditionalInformations" : {
        "title" : "AdditionalInformations",
        "type" : "object",
        "properties" : {
          "agentOfPublicService" : {
            "type" : "boolean",
            "description" : "The institution is an agent of a public service",
            "example" : false
          },
          "agentOfPublicServiceNote" : {
            "type" : "string",
            "description" : "agentOfPublicService Note"
          },
          "belongRegulatedMarket" : {
            "type" : "boolean",
            "description" : "The institution belongs to a regulated market",
            "example" : false
          },
          "establishedByRegulatoryProvision" : {
            "type" : "boolean",
            "description" : "The institution is a company established by a regulatory provision",
            "example" : false
          },
          "establishedByRegulatoryProvisionNote" : {
            "type" : "string",
            "description" : "establishedByRegulatoryProvision Note"
          },
          "ipa" : {
            "type" : "boolean",
            "description" : "The institution is registered on IPA",
            "example" : false
          },
          "ipaCode" : {
            "type" : "string",
            "description" : "IPA code"
          },
          "otherNote" : {
            "type" : "string",
            "description" : "Other note"
          },
          "regulatedMarketNote" : {
            "type" : "string",
            "description" : "regulatedMarket Note"
          }
        }
      },
      "AdditionalInformationsDto" : {
        "title" : "AdditionalInformationsDto",
        "type" : "object",
        "properties" : {
          "agentOfPublicService" : {
            "type" : "boolean",
            "description" : "The institution is an agent of a public service",
            "example" : false
          },
          "agentOfPublicServiceNote" : {
            "type" : "string",
            "description" : "agentOfPublicService Note"
          },
          "belongRegulatedMarket" : {
            "type" : "boolean",
            "description" : "The institution belongs to a regulated market",
            "example" : false
          },
          "establishedByRegulatoryProvision" : {
            "type" : "boolean",
            "description" : "The institution is a company established by a regulatory provision",
            "example" : false
          },
          "establishedByRegulatoryProvisionNote" : {
            "type" : "string",
            "description" : "establishedByRegulatoryProvision Note"
          },
          "ipa" : {
            "type" : "boolean",
            "description" : "The institution is registered on IPA",
            "example" : false
          },
          "ipaCode" : {
            "type" : "string",
            "description" : "IPA code"
          },
          "otherNote" : {
            "type" : "string",
            "description" : "Other note"
          },
          "regulatedMarketNote" : {
            "type" : "string",
            "description" : "regulatedMarket Note"
          }
        }
      },
      "AggregateInstitution" : {
        "title" : "AggregateInstitution",
        "required" : [ "description", "taxCode" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "county" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "digitalAddress" : {
            "type" : "string"
          },
          "geographicTaxonomies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GeographicTaxonomyDto"
            }
          },
          "iban" : {
            "type" : "string"
          },
          "origin" : {
            "type" : "string",
            "enum" : [ "ADE", "ANAC", "INFOCAMERE", "IPA", "IVASS", "MOCK", "PDND_INFOCAMERE", "SELC", "UNKNOWN" ]
          },
          "originId" : {
            "type" : "string"
          },
          "parentDescription" : {
            "type" : "string"
          },
          "recipientCode" : {
            "type" : "string"
          },
          "service" : {
            "type" : "string"
          },
          "subunitCode" : {
            "type" : "string"
          },
          "subunitType" : {
            "type" : "string"
          },
          "syncAsyncMode" : {
            "type" : "string"
          },
          "taxCode" : {
            "type" : "string"
          },
          "taxCodePT" : {
            "type" : "string"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserDto"
            }
          },
          "vatNumber" : {
            "type" : "string"
          },
          "zipCode" : {
            "type" : "string"
          }
        }
      },
      "AggregateResult" : {
        "title" : "AggregateResult",
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "county" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "digitalAddress" : {
            "type" : "string"
          },
          "iban" : {
            "type" : "string"
          },
          "origin" : {
            "type" : "string"
          },
          "originId" : {
            "type" : "string"
          },
          "parentDescription" : {
            "type" : "string"
          },
          "recipientCode" : {
            "type" : "string"
          },
          "service" : {
            "type" : "string"
          },
          "subunitCode" : {
            "type" : "string"
          },
          "subunitType" : {
            "type" : "string"
          },
          "syncAsyncMode" : {
            "type" : "string"
          },
          "taxCode" : {
            "type" : "string"
          },
          "taxCodePT" : {
            "type" : "string"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AggregateUserResult"
            }
          },
          "vatNumber" : {
            "type" : "string"
          },
          "zipCode" : {
            "type" : "string"
          }
        }
      },
      "AggregateUserResult" : {
        "title" : "AggregateUserResult",
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string"
          },
          "surname" : {
            "type" : "string"
          },
          "taxCode" : {
            "type" : "string"
          }
        }
      },
      "AssistanceContactsDto" : {
        "title" : "AssistanceContactsDto",
        "type" : "object",
        "properties" : {
          "supportEmail" : {
            "type" : "string",
            "description" : "Institution's support email contact",
            "format" : "email",
            "example" : "email@example.com"
          },
          "supportPhone" : {
            "type" : "string",
            "description" : "Institution's support phone contact"
          }
        }
      },
      "AssistanceContactsResource" : {
        "title" : "AssistanceContactsResource",
        "type" : "object",
        "properties" : {
          "supportEmail" : {
            "type" : "string",
            "description" : "Institution's support email contact"
          },
          "supportPhone" : {
            "type" : "string",
            "description" : "Institution's support phone contact"
          }
        }
      },
      "Billing" : {
        "title" : "Billing",
        "type" : "object",
        "properties" : {
          "publicServices" : {
            "type" : "boolean"
          },
          "recipientCode" : {
            "type" : "string"
          },
          "taxCodeInvoicing" : {
            "type" : "string"
          },
          "vatNumber" : {
            "type" : "string"
          }
        }
      },
      "BillingDataDto" : {
        "title" : "BillingDataDto",
        "required" : [ "businessName", "digitalAddress", "registeredOffice" ],
        "type" : "object",
        "properties" : {
          "businessName" : {
            "type" : "string",
            "description" : "Institution's legal name"
          },
          "certified" : {
            "type" : "boolean",
            "description" : "Indicates whether the institution values come from INFOCAMERE (true) or MANUAL (false)",
            "example" : false
          },
          "digitalAddress" : {
            "type" : "string",
            "description" : "Institution's digitalAddress"
          },
          "publicServices" : {
            "type" : "boolean",
            "description" : "Institution's service type",
            "example" : false
          },
          "recipientCode" : {
            "type" : "string",
            "description" : "Billing recipient code, not required only for institutionType SA"
          },
          "registeredOffice" : {
            "type" : "string",
            "description" : "Institution's physical address"
          },
          "taxCode" : {
            "type" : "string",
            "description" : "Institution's taxCode"
          },
          "taxCodeInvoicing" : {
            "type" : "string",
            "description" : "Institution's taxCodeInvoicing for electronic invoicing"
          },
          "vatNumber" : {
            "type" : "string",
            "description" : "Institution's VAT number"
          },
          "zipCode" : {
            "type" : "string",
            "description" : "Institution's zipCode"
          }
        }
      },
      "BillingDataResponseDto" : {
        "title" : "BillingDataResponseDto",
        "type" : "object",
        "properties" : {
          "businessName" : {
            "type" : "string",
            "description" : "Institution's legal name"
          },
          "certified" : {
            "type" : "boolean",
            "description" : "Indicates whether the institution values come from INFOCAMERE (true) or MANUAL (false)",
            "example" : false
          },
          "digitalAddress" : {
            "type" : "string",
            "description" : "Institution's digitalAddress"
          },
          "publicServices" : {
            "type" : "boolean",
            "description" : "Institution's service type",
            "example" : false
          },
          "recipientCode" : {
            "type" : "string",
            "description" : "Billing recipient code, not required only for institutionType SA"
          },
          "registeredOffice" : {
            "type" : "string",
            "description" : "Institution's physical address"
          },
          "taxCode" : {
            "type" : "string",
            "description" : "Institution's taxCode"
          },
          "vatNumber" : {
            "type" : "string",
            "description" : "Institution's VAT number"
          },
          "zipCode" : {
            "type" : "string",
            "description" : "Institution's zipCode"
          }
        }
      },
      "BusinessResourceIC" : {
        "title" : "BusinessResourceIC",
        "type" : "object",
        "properties" : {
          "businessName" : {
            "type" : "string",
            "description" : "Legal Representative's institutions name"
          },
          "businessTaxId" : {
            "type" : "string",
            "description" : "Legal Representative's institutions tax ID"
          }
        }
      },
      "CompanyBillingDataDto" : {
        "title" : "CompanyBillingDataDto",
        "required" : [ "businessName", "certified", "digitalAddress", "taxCode" ],
        "type" : "object",
        "properties" : {
          "businessName" : {
            "type" : "string",
            "description" : "Institution's legal name"
          },
          "certified" : {
            "type" : "boolean",
            "description" : "Indicates whether the institution values come from INFOCAMERE (true) or MANUAL (false)",
            "example" : false
          },
          "digitalAddress" : {
            "type" : "string",
            "description" : "Institution's digitalAddress"
          },
          "taxCode" : {
            "type" : "string",
            "description" : "Institution's taxCode"
          }
        }
      },
      "CompanyInformationsDto" : {
        "title" : "CompanyInformationsDto",
        "type" : "object",
        "properties" : {
          "businessRegisterPlace" : {
            "type" : "string",
            "description" : "Institution's business register place"
          },
          "rea" : {
            "type" : "string",
            "description" : "Institution's REA"
          },
          "shareCapital" : {
            "type" : "string",
            "description" : "Institution's share capital value"
          }
        }
      },
      "CompanyInformationsResource" : {
        "title" : "CompanyInformationsResource",
        "type" : "object",
        "properties" : {
          "businessRegisterPlace" : {
            "type" : "string",
            "description" : "Institution's business register place"
          },
          "rea" : {
            "type" : "string",
            "description" : "Institution's REA"
          },
          "shareCapital" : {
            "type" : "string",
            "description" : "Institution's share capital value"
          }
        }
      },
      "CompanyOnboardingDto" : {
        "title" : "CompanyOnboardingDto",
        "required" : [ "billingData", "institutionType", "productId", "taxCode", "users" ],
        "type" : "object",
        "properties" : {
          "billingData" : {
            "description" : "Institution's billing information",
            "$ref" : "#/components/schemas/CompanyBillingDataDto"
          },
          "institutionType" : {
            "type" : "string",
            "description" : "Institution's type",
            "enum" : [ "AS", "CON", "GSP", "PA", "PG", "PRV", "PSP", "PT", "REC", "SA", "SCP" ]
          },
          "productId" : {
            "type" : "string",
            "description" : "Product's unique identifier"
          },
          "taxCode" : {
            "type" : "string",
            "description" : "Institution's taxCode"
          },
          "users" : {
            "type" : "array",
            "description" : "List of onboarding users",
            "items" : {
              "$ref" : "#/components/schemas/CompanyUserDto"
            }
          }
        }
      },
      "CompanyOnboardingUserDto" : {
        "title" : "CompanyOnboardingUserDto",
        "required" : [ "certified", "institutionType", "productId", "taxCode", "users" ],
        "type" : "object",
        "properties" : {
          "certified" : {
            "type" : "boolean",
            "description" : "Indicates whether the institution values come from INFOCAMERE (true) or MANUAL (false)",
            "example" : false
          },
          "institutionType" : {
            "type" : "string",
            "description" : "Institution's type",
            "enum" : [ "AS", "CON", "GSP", "PA", "PG", "PRV", "PSP", "PT", "REC", "SA", "SCP" ]
          },
          "productId" : {
            "type" : "string",
            "description" : "Product's unique identifier"
          },
          "taxCode" : {
            "type" : "string",
            "description" : "Institution's taxCode"
          },
          "users" : {
            "type" : "array",
            "description" : "List of onboarding users",
            "items" : {
              "$ref" : "#/components/schemas/CompanyUserDto"
            }
          }
        }
      },
      "CompanyUserDto" : {
        "title" : "CompanyUserDto",
        "required" : [ "name", "role", "surname", "taxCode" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "User's email"
          },
          "name" : {
            "type" : "string",
            "description" : "User's name"
          },
          "role" : {
            "type" : "string",
            "description" : "User's role",
            "enum" : [ "ADMIN_EA", "DELEGATE", "MANAGER", "OPERATOR", "SUB_DELEGATE" ]
          },
          "surname" : {
            "type" : "string",
            "description" : "User's surname"
          },
          "taxCode" : {
            "type" : "string",
            "description" : "User's fiscal code"
          }
        }
      },
      "DpoData" : {
        "title" : "DpoData",
        "required" : [ "address", "email", "pec" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "DPO's address"
          },
          "email" : {
            "type" : "string",
            "description" : "DPO's email",
            "format" : "email",
            "example" : "email@example.com"
          },
          "pec" : {
            "type" : "string",
            "description" : "DPO's PEC",
            "format" : "email",
            "example" : "email@example.com"
          }
        }
      },
      "DpoDataDto" : {
        "title" : "DpoDataDto",
        "required" : [ "address", "email", "pec" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "DPO's address"
          },
          "email" : {
            "type" : "string",
            "description" : "DPO's email",
            "format" : "email",
            "example" : "email@example.com"
          },
          "pec" : {
            "type" : "string",
            "description" : "DPO's PEC",
            "format" : "email",
            "example" : "email@example.com"
          }
        }
      },
      "GeographicTaxonomyDto" : {
        "title" : "GeographicTaxonomyDto",
        "required" : [ "code", "desc" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Institution's geographic taxonomy ISTAT code"
          },
          "desc" : {
            "type" : "string",
            "description" : "Institution's geographic taxonomy extended name"
          }
        }
      },
      "GeographicTaxonomyResource" : {
        "title" : "GeographicTaxonomyResource",
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Institution's geographic taxonomy ISTAT code"
          },
          "desc" : {
            "type" : "string",
            "description" : "Institution's geographic taxonomy extended name"
          }
        }
      },
      "InstitutionData" : {
        "title" : "InstitutionData",
        "type" : "object",
        "properties" : {
          "assistanceContacts" : {
            "description" : "Institution's assistance contacts",
            "$ref" : "#/components/schemas/AssistanceContactsResource"
          },
          "billingData" : {
            "description" : "Institution's billing information",
            "$ref" : "#/components/schemas/BillingDataResponseDto"
          },
          "city" : {
            "type" : "string",
            "description" : "Institution's city"
          },
          "companyInformations" : {
            "description" : "GPS, SCP, PT optional data",
            "$ref" : "#/components/schemas/CompanyInformationsResource"
          },
          "country" : {
            "type" : "string",
            "description" : "Institution's country"
          },
          "county" : {
            "type" : "string",
            "description" : "Institution's county"
          },
          "id" : {
            "type" : "string",
            "description" : "Institution's unique internal Id"
          },
          "institutionType" : {
            "type" : "string",
            "description" : "Institution's type",
            "enum" : [ "AS", "CON", "GSP", "PA", "PG", "PRV", "PSP", "PT", "REC", "SA", "SCP" ]
          },
          "origin" : {
            "type" : "string"
          }
        }
      },
      "InstitutionInfo" : {
        "title" : "InstitutionInfo",
        "required" : [ "address", "fiscalCode", "institutionType", "mailAddress", "name", "vatNumber", "zipCode" ],
        "type" : "object",
        "properties" : {
          "additionalInformations" : {
            "description" : "GSP institution's additional informations",
            "$ref" : "#/components/schemas/AdditionalInformations"
          },
          "address" : {
            "type" : "string",
            "description" : "Institution's physical address"
          },
          "city" : {
            "type" : "string",
            "description" : "Institution's city"
          },
          "country" : {
            "type" : "string",
            "description" : "Institution's country"
          },
          "county" : {
            "type" : "string",
            "description" : "Institution's county"
          },
          "dpoData" : {
            "description" : "Data Protection Officer (DPO) specific data",
            "$ref" : "#/components/schemas/DpoData"
          },
          "fiscalCode" : {
            "type" : "string",
            "description" : "Institution's taxCode"
          },
          "id" : {
            "type" : "string",
            "description" : "Institution's unique internal Id"
          },
          "institutionType" : {
            "type" : "string",
            "description" : "Institution's type"
          },
          "mailAddress" : {
            "type" : "string",
            "description" : "Institution's digitalAddress"
          },
          "name" : {
            "type" : "string",
            "description" : "Institution's legal name"
          },
          "pspData" : {
            "description" : "Payment Service Provider (PSP) specific data",
            "$ref" : "#/components/schemas/PspData"
          },
          "recipientCode" : {
            "type" : "string",
            "description" : "Billing recipient code, not required only for institutionType SA"
          },
          "taxCodeInvoicing" : {
            "type" : "string",
            "description" : "Institution's taxCodeInvoicing for electronic invoicing"
          },
          "vatNumber" : {
            "type" : "string",
            "description" : "Institution's VAT number"
          },
          "zipCode" : {
            "type" : "string",
            "description" : "Institution's zipCode"
          }
        }
      },
      "InstitutionLegalAddressResource" : {
        "title" : "InstitutionLegalAddressResource",
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "Institution's physical address"
          },
          "zipCode" : {
            "type" : "string",
            "description" : "Institution's zipCode"
          }
        }
      },
      "InstitutionLocationDataDto" : {
        "title" : "InstitutionLocationDataDto",
        "type" : "object",
        "properties" : {
          "city" : {
            "type" : "string",
            "description" : "Institution's city"
          },
          "country" : {
            "type" : "string",
            "description" : "Institution's country"
          },
          "county" : {
            "type" : "string",
            "description" : "Institution's county"
          }
        }
      },
      "InstitutionOnboarding" : {
        "title" : "InstitutionOnboarding",
        "type" : "object",
        "properties" : {
          "billing" : {
            "$ref" : "#/components/schemas/Billing"
          },
          "closedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "contract" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "pricingPlan" : {
            "type" : "string"
          },
          "productId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "tokenId" : {
            "type" : "string"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "InstitutionOnboardingInfoResource" : {
        "title" : "InstitutionOnboardingInfoResource",
        "type" : "object",
        "properties" : {
          "geographicTaxonomies" : {
            "type" : "array",
            "description" : "Institution's geographic taxonomy",
            "items" : {
              "$ref" : "#/components/schemas/GeographicTaxonomyResource"
            }
          },
          "institution" : {
            "description" : "Institution's billing and type information",
            "$ref" : "#/components/schemas/InstitutionData"
          }
        }
      },
      "InstitutionOnboardingResource" : {
        "title" : "InstitutionOnboardingResource",
        "type" : "object",
        "properties" : {
          "institutionId" : {
            "type" : "string"
          },
          "onboardings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InstitutionOnboarding"
            }
          }
        }
      },
      "InstitutionResource" : {
        "title" : "InstitutionResource",
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "Institution's physical address"
          },
          "city" : {
            "type" : "string",
            "description" : "Institution's city"
          },
          "country" : {
            "type" : "string",
            "description" : "Institution's country"
          },
          "county" : {
            "type" : "string",
            "description" : "Institution's county"
          },
          "description" : {
            "type" : "string",
            "description" : "Institution's legal name"
          },
          "digitalAddress" : {
            "type" : "string",
            "description" : "Institution's digitalAddress"
          },
          "externalId" : {
            "type" : "string",
            "description" : "Institution's unique external identifier"
          },
          "id" : {
            "type" : "string",
            "description" : "Institution's unique internal Id",
            "format" : "uuid"
          },
          "institutionType" : {
            "type" : "string",
            "description" : "Institution's type"
          },
          "origin" : {
            "type" : "string",
            "description" : "Institution data origin"
          },
          "originId" : {
            "type" : "string",
            "description" : "Institution's details origin Id"
          },
          "parentDescription" : {
            "type" : "string",
            "description" : "Institution's parent description"
          },
          "taxCode" : {
            "type" : "string",
            "description" : "Institution's taxCode"
          },
          "userRole" : {
            "type" : "string",
            "description" : "Logged user's role",
            "enum" : [ "ADMIN", "ADMIN_EA", "LIMITED" ]
          },
          "zipCode" : {
            "type" : "string",
            "description" : "Institution's zipCode"
          }
        }
      },
      "InstitutionResourceIC" : {
        "title" : "InstitutionResourceIC",
        "type" : "object",
        "properties" : {
          "businesses" : {
            "type" : "array",
            "description" : "Legal Representative's institutions list",
            "items" : {
              "$ref" : "#/components/schemas/BusinessResourceIC"
            }
          },
          "legalTaxId" : {
            "type" : "string",
            "description" : "Legal Representative's tax ID"
          },
          "requestDateTime" : {
            "type" : "string",
            "description" : "Timestamp request institutions PNPG list"
          }
        }
      },
      "InvalidParam" : {
        "title" : "InvalidParam",
        "required" : [ "name", "reason" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Invalid parameter name."
          },
          "reason" : {
            "type" : "string",
            "description" : "Invalid parameter reason."
          }
        }
      },
      "MatchInfoResultResource" : {
        "title" : "MatchInfoResultResource",
        "type" : "object",
        "properties" : {
          "verificationResult" : {
            "type" : "boolean",
            "description" : "Legal Representative and Institution match result on Agenzia delle Entrate",
            "example" : false
          }
        }
      },
      "ManagerResultResource" : {
        "title" : "ManagerResultResource",
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "boolean",
            "description" : "Indicate if the manager match with the current",
            "example" : false
          }
        }
      },
      "OnboardingProductDto" : {
        "title" : "OnboardingProductDto",
        "required" : [ "institutionType", "productId", "users" ],
        "type" : "object",
        "properties" : {
          "additionalInformations" : {
            "description" : "GSP institution's additional informations",
            "$ref" : "#/components/schemas/AdditionalInformationsDto"
          },
          "aggregates" : {
            "type" : "array",
            "description" : "List of Aggregate Institutions, not empty only if isAggregator field's value is True",
            "items" : {
              "$ref" : "#/components/schemas/AggregateInstitution"
            }
          },
          "assistanceContacts" : {
            "description" : "Institution's assistance contacts",
            "$ref" : "#/components/schemas/AssistanceContactsDto"
          },
          "billingData" : {
            "description" : "Institution's billing information",
            "$ref" : "#/components/schemas/BillingDataDto"
          },
          "companyInformations" : {
            "description" : "GPS, SCP, PT optional data",
            "$ref" : "#/components/schemas/CompanyInformationsDto"
          },
          "geographicTaxonomies" : {
            "type" : "array",
            "description" : "List of geographic Taxonomies",
            "items" : {
              "$ref" : "#/components/schemas/GeographicTaxonomyDto"
            }
          },
          "institutionLocationData" : {
            "description" : "Institution's location data, city, county, country information",
            "$ref" : "#/components/schemas/InstitutionLocationDataDto"
          },
          "institutionType" : {
            "type" : "string",
            "description" : "Institution's type",
            "enum" : [ "AS", "CON", "GSP", "PA", "PG", "PRV", "PSP", "PT", "REC", "SA", "SCP" ]
          },
          "isAggregator" : {
            "type" : "boolean",
            "description" : "specified if given institution is an Aggregator",
            "example" : false
          },
          "origin" : {
            "type" : "string",
            "description" : "Institution data origin"
          },
          "originId" : {
            "type" : "string",
            "description" : "Institution's details origin Id"
          },
          "pricingPlan" : {
            "type" : "string",
            "description" : "Product's pricing plan"
          },
          "productId" : {
            "type" : "string",
            "description" : "Product's unique identifier"
          },
          "pspData" : {
            "description" : "Payment Service Provider (PSP) specific data",
            "$ref" : "#/components/schemas/PspDataDto"
          },
          "subunitCode" : {
            "type" : "string",
            "description" : "Institution's subunitCode"
          },
          "subunitType" : {
            "type" : "string",
            "description" : "Institution's subunitType"
          },
          "taxCode" : {
            "type" : "string",
            "description" : "Institution's taxCode"
          },
          "users" : {
            "type" : "array",
            "description" : "List of onboarding users",
            "items" : {
              "$ref" : "#/components/schemas/UserDto"
            }
          }
        }
      },
      "OnboardingRequestResource" : {
        "title" : "OnboardingRequestResource",
        "required" : [ "institutionInfo", "status" ],
        "type" : "object",
        "properties" : {
          "admins" : {
            "type" : "array",
            "description" : "Administrators specific data",
            "items" : {
              "$ref" : "#/components/schemas/UserInfo"
            }
          },
          "expiringDate" : {
            "type" : "string",
            "description" : "Onboarding request expiring date",
            "format" : "date-time"
          },
          "institutionInfo" : {
            "description" : "Institution specific data",
            "$ref" : "#/components/schemas/InstitutionInfo"
          },
          "manager" : {
            "description" : "Manager specific data. It's required when institutionType is not PT",
            "$ref" : "#/components/schemas/UserInfo"
          },
          "productId" : {
            "type" : "string",
            "description" : "Product's unique identifier"
          },
          "reasonForReject" : {
            "type" : "string",
            "description" : "Onboarding request rejection reason"
          },
          "status" : {
            "type" : "string",
            "description" : "Onboarding request's status"
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "Onboarding request update date",
            "format" : "date-time"
          }
        }
      },
      "OnboardingUserDto" : {
        "title" : "OnboardingUserDto",
        "required" : [ "productId", "users" ],
        "type" : "object",
        "properties" : {
          "institutionType" : {
            "type" : "string",
            "description" : "Institution's type",
            "enum" : [ "AS", "CON", "GSP", "PA", "PG", "PRV", "PSP", "PT", "REC", "SA", "SCP" ]
          },
          "origin" : {
            "type" : "string",
            "description" : "Institution data origin"
          },
          "originId" : {
            "type" : "string",
            "description" : "Institution's details origin Id"
          },
          "productId" : {
            "type" : "string",
            "description" : "Product's unique identifier"
          },
          "subunitCode" : {
            "type" : "string",
            "description" : "Institution's subunitCode"
          },
          "taxCode" : {
            "type" : "string",
            "description" : "Institution's taxCode"
          },
          "users" : {
            "type" : "array",
            "description" : "List of onboarding users",
            "items" : {
              "$ref" : "#/components/schemas/UserDto"
            }
          }
        }
      },
      "OnboardingVerify" : {
        "title" : "OnboardingVerify",
        "required" : [ "status" ],
        "type" : "object",
        "properties" : {
          "expiringDate" : {
            "type" : "string",
            "description" : "Onboarding request expiring date",
            "format" : "date-time"
          },
          "productId" : {
            "type" : "string",
            "description" : "Product's unique identifier"
          },
          "status" : {
            "type" : "string",
            "description" : "Onboarding request's status"
          }
        }
      },
      "Problem" : {
        "title" : "Problem",
        "required" : [ "status", "title" ],
        "type" : "object",
        "properties" : {
          "detail" : {
            "type" : "string",
            "description" : "Human-readable description of this specific problem."
          },
          "instance" : {
            "type" : "string",
            "description" : "A URI that describes where the problem occurred."
          },
          "invalidParams" : {
            "type" : "array",
            "description" : "A list of invalid parameters details.",
            "items" : {
              "$ref" : "#/components/schemas/InvalidParam"
            }
          },
          "status" : {
            "type" : "integer",
            "description" : "The HTTP status code.",
            "format" : "int32",
            "example" : 500
          },
          "title" : {
            "type" : "string",
            "description" : "Short human-readable summary of the problem."
          },
          "type" : {
            "type" : "string",
            "description" : "A URL to a page with more details regarding the problem."
          }
        },
        "description" : "A \"problem detail\" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)"
      },
      "ProductResource" : {
        "title" : "ProductResource",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Product's unique identifier"
          },
          "logo" : {
            "type" : "string",
            "description" : "Product's logo"
          },
          "logoBgColor" : {
            "type" : "string",
            "description" : "Product logo's background color"
          },
          "parentId" : {
            "type" : "string",
            "description" : "Product's parent's Id"
          },
          "status" : {
            "type" : "string",
            "description" : "Product's status",
            "enum" : [ "ACTIVE", "INACTIVE", "PHASE_OUT", "TESTING" ]
          },
          "title" : {
            "type" : "string",
            "description" : "Product's title"
          }
        }
      },
      "PspData" : {
        "title" : "PspData",
        "required" : [ "abiCode", "businessRegisterNumber", "legalRegisterName", "legalRegisterNumber", "vatNumberGroup" ],
        "type" : "object",
        "properties" : {
          "abiCode" : {
            "type" : "string",
            "description" : "PSP's ABI code"
          },
          "businessRegisterNumber" : {
            "type" : "string",
            "description" : "PSP's Business Register number"
          },
          "legalRegisterName" : {
            "type" : "string",
            "description" : "PSP's legal register name"
          },
          "legalRegisterNumber" : {
            "type" : "string",
            "description" : "PSP's legal register number"
          },
          "vatNumberGroup" : {
            "type" : "boolean",
            "description" : "PSP's Vat Number group",
            "example" : false
          }
        }
      },
      "PspDataDto" : {
        "title" : "PspDataDto",
        "required" : [ "abiCode", "businessRegisterNumber", "dpoData", "legalRegisterName", "legalRegisterNumber", "vatNumberGroup" ],
        "type" : "object",
        "properties" : {
          "abiCode" : {
            "type" : "string",
            "description" : "PSP's ABI code"
          },
          "businessRegisterNumber" : {
            "type" : "string",
            "description" : "PSP's Business Register number"
          },
          "dpoData" : {
            "description" : "Data Protection Officer (DPO) specific data",
            "$ref" : "#/components/schemas/DpoDataDto"
          },
          "legalRegisterName" : {
            "type" : "string",
            "description" : "PSP's legal register name"
          },
          "legalRegisterNumber" : {
            "type" : "string",
            "description" : "PSP's legal register number"
          },
          "vatNumberGroup" : {
            "type" : "boolean",
            "description" : "PSP's Vat Number group",
            "example" : false
          }
        }
      },
      "ReasonForRejectDto" : {
        "title" : "ReasonForRejectDto",
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string",
            "description" : "Rejection reason of an onboarding request"
          }
        }
      },
      "RowErrorResponse" : {
        "title" : "RowErrorResponse",
        "type" : "object",
        "properties" : {
          "codice fiscale" : {
            "type" : "string"
          },
          "errore" : {
            "type" : "string"
          },
          "riga" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UserDataValidationDto" : {
        "title" : "UserDataValidationDto",
        "required" : [ "taxCode" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "User's name"
          },
          "surname" : {
            "type" : "string",
            "description" : "User's surname"
          },
          "taxCode" : {
            "type" : "string",
            "description" : "User's fiscal code"
          }
        }
      },
      "UserDto" : {
        "title" : "UserDto",
        "required" : [ "name", "role", "surname", "taxCode" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "User's email"
          },
          "name" : {
            "type" : "string",
            "description" : "User's name"
          },
          "role" : {
            "type" : "string",
            "description" : "User's role",
            "enum" : [ "ADMIN_EA", "DELEGATE", "MANAGER", "OPERATOR", "SUB_DELEGATE" ]
          },
          "surname" : {
            "type" : "string",
            "description" : "User's surname"
          },
          "taxCode" : {
            "type" : "string",
            "description" : "User's fiscal code"
          }
        }
      },
      "UserInfo" : {
        "title" : "UserInfo",
        "required" : [ "email", "fiscalCode", "id", "name", "surname" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "User's institutional email"
          },
          "fiscalCode" : {
            "type" : "string",
            "description" : "User's fiscal code"
          },
          "id" : {
            "type" : "string",
            "description" : "User's unique identifier",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "description" : "User's name"
          },
          "surname" : {
            "type" : "string",
            "description" : "User's surname"
          }
        }
      },
      "VerificationLegalAddressRequest" : {
        "title" : "VerificationLegalAddressRequest",
        "required" : [ "taxCode" ],
        "type" : "object",
        "properties" : {
          "taxCode" : {
            "type" : "string"
          }
        }
      },
      "VerificationMatchRequest" : {
        "title" : "VerificationMatchRequest",
        "required" : [ "taxCode", "userDto" ],
        "type" : "object",
        "properties" : {
          "taxCode" : {
            "type" : "string"
          },
          "userDto" : {
            "$ref" : "#/components/schemas/UserDto"
          }
        }
      },
      "VerifyAggregatesResponse" : {
        "title" : "VerifyAggregatesResponse",
        "type" : "object",
        "properties" : {
          "aggregates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AggregateResult"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RowErrorResponse"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "description" : "A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}